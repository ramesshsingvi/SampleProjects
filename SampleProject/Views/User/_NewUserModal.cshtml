@using TrustonTap.Common
@using TrustonTap.Web.ViewModels;

@model NewUserViewModel

@{
        var postcodes = Enumerable.Empty<SelectListItem>().ToList();
    if (!String.IsNullOrWhiteSpace(Request.QueryString["PostCode"]))
    {
        postcodes.Add(new SelectListItem() { Text = Request.QueryString["PostCode"], Value = Request.QueryString["PostCode"], Selected = true });
    }
}

@Html.Partial("_Feedback")

@using (Html.BeginForm("NewUser", "User", FormMethod.Post))
{
    @Html.HiddenFor(x=>x.UserType)
    @Html.HiddenFor(x=>x.BookingId)
    <!-- Modal -->
    <div id="newUserModal" class="modal fade draggable-modal" role="dialog">
        <div class="modal-dialog">
            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">@Model.Title</h4>
                </div>
                <div class="modal-body">
                    <div class="row">
                        <div class="form-group col-xs-6">
                            <label>First Name*</label>
                            <div class="input-group">
                                @Html.TextBoxFor(x => x.User.FirstName, null, new { @class = "form-control", required = "required" })
                            </div>
                        </div>
                        <div class="form-group col-xs-6">
                            <label>Last Name*</label>
                            <div class="input-group">
                                @Html.TextBoxFor(x => x.User.LastName, null, new { @class = "form-control", required = "required" })
                            </div>
                        </div>
                    </div>
                    <div class="row" id="pnlEmail">
                        <div class="form-group  col-xs-6">
                            <label>Email*</label>
                            <div class="input-group">
                                @Html.TextBoxFor(x => x.User.Email, null, new { @class = "form-control", type = "email", required = "required", placeholder = "Email Address" })
                            </div>
                        </div>
                        <div class="form-group  col-xs-6">
                        </div>
                    </div>
                    <div class="row">
                        <div class="form-group  col-xs-6">
                            <label>Phone Number</label>
                            <div class="input-group">
                                @Html.TextBoxFor(x => x.User.Phone, null, new { @class = "form-control" })
                            </div>
                        </div>
                        <div class="form-group  col-xs-6">
                            <label>Mobile Phone</label>
                            <div class="input-group">
                                @Html.TextBoxFor(x => x.User.MobilePhone, null, new { @class = "form-control" })
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="form-group  col-xs-6">
                            <label>Address Line 1</label>
                            <div class="input-group">
                                @Html.TextBoxFor(x => x.User.AddressLine1, null, new { @class = "form-control" })
                            </div>
                        </div>

                        <div class="form-group  col-xs-6">
                            <label>Address Line 2</label>
                            <div class="input-group">
                                @Html.TextBoxFor(x => x.User.AddressLine2, null, new { @class = "form-control" })
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="form-group  col-xs-6">
                            <label>Address Line 3</label>
                            <div class="input-group">
                                @Html.TextBoxFor(x => x.User.AddressLine3, null, new { @class = "form-control" })
                            </div>
                        </div>
                        <div class="form-group  col-xs-6">
                               <label>Town</label>
                            <div class="input-group">
                               @Html.TextBoxFor(x => x.User.Town, null, new { @class = "form-control", required = (Model.UserType == UserType.Payer ? "required" : null) })
                            </div>
                            </div>
                    </div>
                    <div class="row">
                        <div class="form-group  col-xs-6">
                            <label>Postcode</label>
                            <div class="input-group">
                                @Html.DropDownListFor(x => x.User.Postcode, postcodes, new { @class = "form-control combobox postcode", required = "required" })
                            </div>
                        </div>
                        <div class="form-group  col-xs-6">

                        </div>
                    </div>
                    @if (Model.UserType == UserType.CareRecipient)
                    {
                    <div class="row">
                        <div class="form-group col-xs-12">
                            <div class="form-group">
                                @Html.CheckBoxFor(x => x.GenerateUsername) <label>@Model.UserType.GetDescription() doesnt have an email address.</label>
                            </div>
                        </div>
                    </div>
                    }
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-info pull-left" data-dismiss="modal"><i class="fa fa-times fa-md"></i> Close</button>
                    <button id="btnSave" type="submit" class="btn btn-info"><i class="fa fa-save fa-md"></i> Save</button>
                </div>
            </div>
        </div>
    </div>
}



    <script>

        $(".postcode").select2({ width: '192px',
            ajax: {
                url: '/AddressLookup/SearchPostcodesJSON/',
                dataType: 'json',
                delay: 250,
                data: function (params) {
                    return {
                        search: params.term
                    };
                },
                processResults: function (data) {
                    return {
                        results: $.map(data.items, function (obj) {
                            return { id: obj, text: obj };
                        })
                    };
                },
                cache: true
            },
            placeholder: 'Select postcode',
            allowClear: true,
            escapeMarkup: function (markup) { return markup; }, // let our custom formatter work
            minimumInputLength: 1,
            //templateResult: formatRepo,
            //templateSelection: formatRepoSelection
        });

        $(document.body).on("change", ".postcode", function () {
            var postcode = this.value;

            $.ajax({
                type: 'GET',
                url: '/addresslookup/GetTown/?postcode=' + postcode
            }).then(function (data) {
                if (data.success) {
                    var townField = $("#@Html.IdFor(x => x.User.Town)");
                    if(!townField.val())
                    {
                        townField.val(data.town);
                    }
                }
            });
        });

        $("#@Html.IdFor(x => x.GenerateUsername)").click(function () {
            if ($("#@Html.IdFor(x => x.GenerateUsername)").is(':checked')) {
                $("#@Html.IdFor(x => x.User.Email)").prop('disabled', true);
                $('#pnlEmail').hide();
            }
            else {
                $("#@Html.IdFor(x => x.User.Email)").prop('disabled', false);
                $('#pnlEmail').show();
            }
        });
    </script>
