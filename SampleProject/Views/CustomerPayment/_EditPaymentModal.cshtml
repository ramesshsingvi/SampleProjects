@using TrustonTap.Common.Models;

@model BankTransaction

@using (Html.BeginForm("Edit", "CustomerPayment", FormMethod.Post))
{
    @Html.HiddenFor(x=>x.ID)
    <!-- Modal -->
    <div id="paymentModal" class="modal fade draggable-modal" role="dialog">
        <div class="modal-dialog">
            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Edit Payment</h4>
                </div>
                <div class="modal-body">
                    <div class="form-group">
                        <label>Amount</label>
                        <div class="input-group">
                            <span class="input-group-addon">£</span>
                            @{
                                Dictionary<string, object> attributes = new Dictionary<string, object>() {
                                    { "type", "number"},
                                    { "step", "0.01"},
                                    { "min", "0.01"},
                                    { "required", true},
                                    { "class","form-control currency"}
                                };
                                if(Model.AllocationStatus != AllocationStatus.Unallocated)
                                {
                                    attributes.Add("readonly", "readonly");
                                }
                            }
                            @Html.TextBoxFor(x => x.Amount, attributes)
                        </div>
                    </div>
                    <div class="form-group">
                        <label>Payment Date</label>
                        @Html.TextBoxFor(x => x.PaymentDate, Model.PaymentDate.ToString("dd/MM/yyyy"), new { required = true, @class = "datepicker form-control" })
                    </div>
                    <div class="form-group">
                        <label>Payment Method</label>
                        @Html.CustomEnumDropDownListFor(x => x.PaymentMethod, new { @class = "form-control" })
                    </div>
                    <div class="form-group">
                        <label>Reference</label>
                        @Html.TextBoxFor(x => x.Reference, new { @class = "form-control", maxlength = "50" })
                    </div>
                    <div class="form-group">
                        <label>Notes</label>
                        @Html.TextAreaFor(x => x.Notes, new { @class = "form-control", maxlength = "1000" })
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-info pull-left" data-dismiss="modal"><i class="fa fa-times fa-md"></i> Close</button>
                    <button id="btnSave" type="submit" class="btn btn-info"><i class="fa fa-save fa-md"></i> Save</button>
                </div>
            </div>
        </div>
    </div>
}

<script>
    $("#amount").on('change', function () {
        allocatePayment($(this).val());
    });
    $(".allocationAmount").on('change', function () {
        updateAllocationTotal();
    });
</script>